hadoop fs -cp /data/NYSE_daily /user/ajinkyaiimr8809

CREATE TABLE nyse(
stockexchange STRING,
symbol STRING,
ymd STRING,
price_open FLOAT,
price_high FLOAT,
price_low FLOAT,
price_close FLOAT,
volume INT,
price_adj_close FLOAT
)
ROW FORMAT DELIMITED FIELDS TERMINATED BY "\t";
load data inpath 'hdfs:///user/ajinkyaiimr8809/NYSE_daily' overwrite into table nyse;
load data local inpath 'NYSE_daily' overwrite into table nyse;


***Adding serde JAR in hive***

ADD JAR hdfs:///data/hive/json-serde-1.1.9.9-Hive13-jar-with-dependencies.jar;
SET hive.support.sql11.reserved.keywords=false;

CREATE DATABASE IF NOT EXISTS ${env:USER};
USE ${env:USER};

Create a tweets_raw external table. It contains details of each tweet. Run below commands in the hive. ${env:USER} gets replaced by your username automatically:

CREATE EXTERNAL TABLE tweets_raw_ajinkya8809 (
    id BIGINT,
    created_at STRING,
    source STRING,
    favorited BOOLEAN,
    retweet_count INT,
    retweeted_status STRUCT<
    text:STRING,
    users:STRUCT<screen_name:STRING,name:STRING>>,
    entities STRUCT<
    urls:ARRAY<STRUCT<expanded_url:STRING>>,
    user_mentions:ARRAY<STRUCT<screen_name:STRING,name:STRING>>,
    hashtags:ARRAY<STRUCT<text:STRING>>>,
    text STRING,
    user STRUCT<
    screen_name:STRING,
    name:STRING,
    friends_count:INT,
    followers_count:INT,
    statuses_count:INT,
    verified:BOOLEAN,
    utc_offset:STRING, -- was INT but nulls are strings
    time_zone:STRING>,
    in_reply_to_screen_name STRING,
    year int,
    month int,
    day int,
    hour int
)
ROW FORMAT SERDE 'org.openx.data.jsonserde.JsonSerDe'
WITH SERDEPROPERTIES ("ignore.malformed.json" = "true")
LOCATION '/user/${env:USER}/SentimentFiles/SentimentFiles/upload/data/tweets_raw';

----To see the metadata of the database
describe database ajinkyaiimr8809

----To see metadata of a table
describe formatted table_name

########Checking the contents in data warehouse
hadoop fs -ls /apps/hive/warehouse/$USER.db/nyse/*

-----Creating an external table

CREATE EXTERNAL TABLE nyse_external(
    exchange1 STRING,
    symbol1 STRING,
    ymd STRING,
    price_open FLOAT,
    price_high FLOAT,
    price_low FLOAT,
    price_close FLOAT,
    volume INT,
    price_adj_close FLOAT
)
ROW FORMAT DELIMITED FIELDS TERMINATED BY '\t'
LOCATION '/user/${env:USER}/NYSE_daily';


Use your database by using the below command. ${env:USER} gets replaced by your username automatically:

use ${env:USER};
To save the data in the local file system

insert overwrite local directory '/home/${env:USER}/onlycmc'
select * from nyse where symbol1 = 'CMC';
To view this data type in the following commands (Run in the web console)

 tail onlycmc/000000_0
To save data in HDFS (Run in Hive)

insert overwrite directory 'onlycmc' select * from nyse where
symbol1 = 'CMC';

***Adding ccolumns in a table
ALTER TABLE x1 add columns(b int,c float)

***Creating Views
CREATE view employee_engineering as SELECT * from employees where department == "Engineering";

***Loading JSON data


***Checking last few lines of the json file
hadoop fs -tail /user/$USER/sample_json/user_country.json

***Loading data from JSON file
CREATE EXTERNAL TABLE user_countries(
    name string,
    country string
)
ROW FORMAT SERDE 'org.apache.hive.hcatalog.data.JsonSerDe'
LOCATION 'hdfs:///user/${env:USER}/sample_json';




